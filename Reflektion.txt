Först så började jag med HTML:et, la up dem semantiska elementen och sedan innehållselementen tillsammans med deras respektive innehåll (bestående av headings, paragraphs och links). Jag började där för min egen skull för att bli mer orienterad. För att ha en grund att stå på och börja med, så att säga. Den grunden blev sidans layout av dess innehåll (fast inte layouten av var de olika elementen skulle bli placerade, vilket sker senare i css-delen). Jag skulle nu lättare kunna ana/visualisera vad exakt det är som saknas i bilden och som behövs läggas till genom min script som jag inte hade lagt till genom min HTML. Nämligen, input:en och knapparna tillsammans med deras medföljande text outputs.
   Jag visste att jag ville ha min inloggning i headern bredvid sidans huvudtitel och såg till att lägga en div i min HTML för att illustrera detta fastän den lämnades tom genom hela uppgiftens gång och fastän den inte behövde vara där utan kunde skapas i min script. Men jag tyckte det var viktigt att ha hela sidans struktur synlig på en och samma plats för min egen skull men också för andras läsupplevelse; de behöver inte hoppa runt mellan filer för att få en hel överblick på den saken.

Nu skulle den div:en fyllas på, remote, från .js-filen, med inputs och knappar och text. Jag skulle antagligen ha kunnat lägga till en button och inserts till div:en i HTML och kunnat göra en variabel som refererar till dem med "getElementById". Men jag gillar inte det eftersom det får det att verka som att div:en är statisk och inte ändras. Om den lämnas tom, däremot, signaleras det till den som läser koden att den platsen väntar på att fyllas. Nu blev id:et för den div:en,"access-function", men jag skulle ha kunnat ha gjort id:et så att den talar om för läsaren att elementet styrs av min script genom att döpa om den till något som t.ex., "access-function-by-script", i stället.

Jag ville inte ha knappar och inputs i div:en eftersom jag tänkte att leka runt men också tog hänsyn till att dessa element kommer att försvinna och uppenbara sig enligt interaktionen från användaren. Jag visste att det som sker i en funktion sker bara om den ropas på så elementen kommer inte finnas om funktionen inte ropas på.

Jag valde att orientera min Javascript enligt knapparna eftersom dem var den avgörande interaktiva delen av min sida.
tre funktioner för varje knapp och en global if-sats som kommer checka localstorage vid varje ny refresh och tillämpa ett visst innehåll beroende på det som finns i localstorage

repetitionssatser, funktioner, localstorage = localstorage för att "spara" den funktion som gäller och sedan if-satser med conditions som kollar efter vad som sparats för att avgöra hur den ska handla.

Skulle kunnat göra: Mina nodes skulle ha kunnat lagts globalt och ändå nås från funktionen när det var dags att append:a. Det skulle ha gjort funktionernas innehåll  mindre trångt, men jag tycker att fylla på med att som relaterar till en funktion skulle vara det bästa sättet att orientera sig i vad det som händer när funktionen ropas på och vilka element det kommer ha påverkan på.
